{"version":3,"sources":["webpack:///./src/app/pages/inbox/inbox.module.ts","webpack:///./src/app/pages/inbox/inbox.page.html","webpack:///./src/app/pages/inbox/inbox.page.scss","webpack:///./src/app/pages/inbox/inbox.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,8pBAA8pB,aAAa,8BAA8B,iBAAiB,4BAA4B,YAAY,uvB;;;;;;;;;;;ACAlwB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAC;AACY;AACtB;AACD;AAMrD;IAEE,mBACM,OAAqB,EACnB,MAAuB,EACxB,IAAiB;QAFlB,YAAO,GAAP,OAAO,CAAc;QACnB,WAAM,GAAN,MAAM,CAAiB;QACxB,SAAI,GAAJ,IAAI,CAAa;IAKvB,CAAC;IACJ,oCAAgB,GAAhB;QAAA,iBAsBC;QArBG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,GAAG;YAClC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,IAAE,IAAI,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,UAAU,GAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnC,wBAAwB;gBAClB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;oBAC9C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,IAAI,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxB,KAAI,CAAC,aAAa,GAAC,GAAG,CAAC;gBACvB,CAAC,CAAC,CAAC;aACA;iBACG;gBACF,sCAAsC;aACvC;QACH,CAAC,EAAC,UAAC,GAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,oEAAoE;QAEvE,CAAC,CAAC,CAAC;IAEP,CAAC;IACC,4BAAQ,GAAR;IAEA,CAAC;IACD,mCAAe,GAAf;IAEA,CAAC;IACC,0BAAM,GAAN;QACC,IAAI,CAAC,aAAa,GAAC,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;IACpD,CAAC;IA3CU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,+FAAgC;;SAEjC,CAAC;+EAIc,4DAAa;YACX,kEAAe;YACnB,mEAAY;OALb,SAAS,CA8CrB;IAAD,gBAAC;CAAA;AA9CqB","file":"pages-inbox-inbox-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InboxPage } from './inbox.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InboxPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [InboxPage]\n})\nexport class InboxPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n  \\t <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\" slot=\\\"icon-only\\\">\\n        <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Coupons</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n   <ion-list-header>\\n          Recent Notifications\\n        </ion-list-header>\\n      <ion-list *ngFor =\\\"let notif of notifications\\\">\\n    \\n\\n        <ion-item>\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"assets/img/logo.png\\\">\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>{{notif.title}}</h2>\\n           <!--  <h3>{{notif.wasTapped}}</h3> -->\\n            <p>{{notif.body}}</p>\\n          </ion-label>\\n        </ion-item>\\n<!-- \\n        <ion-item>\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"assets/img/logo.png\\\">\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>Han</h2>\\n            <h3>Look, kid...</h3>\\n            <p>I've got enough on my plate as it is, and I...</p>\\n          </ion-label>\\n        </ion-item>\\n\\n\\n        <ion-item>\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"assets/img/logo.png\\\">\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>Yoda</h2>\\n            <h3>Size matters not</h3>\\n            <p>Do or do not. There is no try...</p>\\n          </ion-label>\\n        </ion-item> -->\\n      \\n      </ion-list>\\n    </ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luYm94L2luYm94LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit,AfterViewInit } from '@angular/core';\nimport { NavController, IonContent, ModalController } from '@ionic/angular';\nimport { UserProvider } from 'src/app/providers/user';\nimport { AngularFireAuth } from '@angular/fire/auth';\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.page.html',\n  styleUrls: ['./inbox.page.scss'],\n})\nexport class InboxPage implements OnInit,AfterViewInit {\n  notifications:any;\n  constructor(\nprivate navCtrl:NavController,\n  private afAuth: AngularFireAuth,\n private user:UserProvider\n   ) {\n   \t \t  \n \n\n   }\nionViewWillEnter() {\n\t   this.afAuth.authState.subscribe((res) => {\n      console.log(res);\n      if (res!=null) {\n      console.log(\"user id:\"+res.uid);\n   //  this.userid=res.uid;\n         this.user.getinbox(res.uid).subscribe((msg)=>{\n    \tconsole.log(msg);\n    \tlet data=msg[0];\n    \tconsole.log(data.body);\n    this.notifications=msg;\n    });\n      }\n      else{\n        //this.navCtrl.navigateRoot('/login');\n      }\n    },(err)=>{\n      console.log(err);\n       //this.toast.presentToast('unable to find logged in user','danger');\n  \n    }); \n\n}\n  ngOnInit() {\n\n  }\n  ngAfterViewInit(){\n  \n  }\n    goBack() {\n    \tthis.notifications=[];\n    this.navCtrl.navigateBack('/menu/tabs/tabs/home');\n  }\n\n\n}\n"],"sourceRoot":""}